local a={}function a.map(b,c,d,e)local f={noremap=true}if e then f=vim.tbl_extend("force",f,e)end;vim.api.nvim_set_keymap(b,c,d,f)end;function a.contains(table,c)return table[c]~=nil end;function a.get_current_mode()return vim.api.nvim_get_mode().mode end;function a.diagnostic_exists()return not vim.tbl_isempty(vim.lsp.buf_get_clients(vim.api.nvim_get_current_buf()))end;function a.get_lsp_clients()local g={}for h,i in pairs(vim.lsp.buf_get_clients(0))do local j=string.match(i.name,"(.-)_.*")or string.match(i.name,"(.-)-.*")or i.name;table.insert(g,j)end;return table.concat(g,", ")end;function a.wide_enough(k)if vim.fn.winwidth(0)>k then return true end;return false end;function a.buffer_not_empty()if vim.fn.empty(vim.fn.expand("%:t"))~=1 then return true end;return false end;function a.has_filetype()local l=vim.bo.filetype;if not l or l==""then return false end;return true end;function a.highlight(m,n,o,p)local q=string.format("highlight %s guifg=%s guibg=%s",m,n,o)if p~=nil then q=q.." gui="..p end;vim.cmd(q)end;function a.log(r,s,t)s=s or"Neovim"t=t or"Comment"vim.api.nvim_echo({{s..": ",t},{r}},true,{})end;function a.toggle(u,v)local w=vim.api.nvim_get_option_info(u)local x={buf="bo",win="wo",global="o"}local y=x[w.scope]local f=vim[y]f[u]=not f[u]if v~=true then if f[u]then a.info("enabled vim."..y.."."..u,"Toggle")else a.warn("disabled vim."..y.."."..u,"Toggle")end end end;return a